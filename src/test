@28132555 STACK = (3 3)
get 0
@28132556 STACK = (3 3 3)
get 2
@28132557 STACK = (3 3 3 3)
call eqv?
@28132558 STACK = (#t 3 3)
get 0
@28132559 STACK = (#t #t 3 3)
if
@28132560 STACK = (#t 3 3)
get 0
@28132561 STACK = (#t #t 3 3)
jump id
@28132562 STACK = (#t #f "" "_0")
if
@28132563 STACK = (#f "" "_0")
get 1
@28132564 STACK = ("" #f "" "_0")
call field1
@28132565 STACK = (0 #f "" "_0")
get 3
@28132566 STACK = ("_0" 0 #f "" "_0")
call field1
@28132567 STACK = (2 0 #f "" "_0")
call equal?
@28132568 STACK = (0 2)
get 0
@28132569 STACK = (0 0 2)
get 2
@28132570 STACK = (2 0 0 2)
call eqv?
@28132571 STACK = (#f 0 2)
get 0
@28132572 STACK = (#f #f 0 2)
if
@28132573 STACK = (#f 0 2)
get 1
@28132574 STACK = (0 #f 0 2)
call rib?
@28132575 STACK = (#f #f 0 2)
if
@28132576 STACK = (#f 0 2)
get false
@28132577 STACK = (#f #f 0 2)
jump id
@28132578 STACK = (#f #f "" "_0")
if
@28132579 STACK = (#f "" "_0")
get false
@28132580 STACK = (#f #f "" "_0")
jump id
@28132581 STACK = (#f #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
if
@28132582 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 1
@28132583 STACK = ("_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 3
@28132584 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
call field1
@28132585 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
jump string->symbol-aux
@28132586 STACK = ("_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 1
@28132587 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()) "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
call pair?
@28132588 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 0
@28132589 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()) (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
call rib?
@28132590 STACK = (#t (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
if
@28132591 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 0
@28132592 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()) (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
call field2
@28132593 STACK = (0 (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 4
@28132594 STACK = (0 0 (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
jump eqv?
@28132595 STACK = (#t "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
if
@28132596 STACK = ("_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 1
@28132597 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()) "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
call field0
@28132598 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 0
@28132599 STACK = (#<symbol ""> #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
call field1
@28132600 STACK = ("" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 2
@28132601 STACK = ("_0" "" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
call equal?
@28132602 STACK = ("" "_0")
get 0
@28132603 STACK = ("" "" "_0")
get 2
@28132604 STACK = ("_0" "" "" "_0")
call eqv?
@28132605 STACK = (#f "" "_0")
get 0
@28132606 STACK = (#f #f "" "_0")
if
@28132607 STACK = (#f "" "_0")
get 1
@28132608 STACK = ("" #f "" "_0")
call rib?
@28132609 STACK = (#t #f "" "_0")
if
@28132610 STACK = (#f "" "_0")
get 1
@28132611 STACK = ("" #f "" "_0")
call field2
@28132612 STACK = (3 #f "" "_0")
const 5
@28132613 STACK = (5 3 #f "" "_0")
call eqv?
@28132614 STACK = (#f #f "" "_0")
if
@28132615 STACK = (#f "" "_0")
get 2
@28132616 STACK = ("_0" #f "" "_0")
call rib?
@28132617 STACK = (#t #f "" "_0")
if
@28132618 STACK = (#f "" "_0")
get 1
@28132619 STACK = ("" #f "" "_0")
call field2
@28132620 STACK = (3 #f "" "_0")
get 3
@28132621 STACK = ("_0" 3 #f "" "_0")
call field2
@28132622 STACK = (3 3 #f "" "_0")
call equal?
@28132623 STACK = (3 3)
get 0
@28132624 STACK = (3 3 3)
get 2
@28132625 STACK = (3 3 3 3)
call eqv?
@28132626 STACK = (#t 3 3)
get 0
@28132627 STACK = (#t #t 3 3)
if
@28132628 STACK = (#t 3 3)
get 0
@28132629 STACK = (#t #t 3 3)
jump id
@28132630 STACK = (#t #f "" "_0")
if
@28132631 STACK = (#f "" "_0")
get 1
@28132632 STACK = ("" #f "" "_0")
call field1
@28132633 STACK = (0 #f "" "_0")
get 3
@28132634 STACK = ("_0" 0 #f "" "_0")
call field1
@28132635 STACK = (2 0 #f "" "_0")
call equal?
@28132636 STACK = (0 2)
get 0
@28132637 STACK = (0 0 2)
get 2
@28132638 STACK = (2 0 0 2)
call eqv?
@28132639 STACK = (#f 0 2)
get 0
@28132640 STACK = (#f #f 0 2)
if
@28132641 STACK = (#f 0 2)
get 1
@28132642 STACK = (0 #f 0 2)
call rib?
@28132643 STACK = (#f #f 0 2)
if
@28132644 STACK = (#f 0 2)
get false
@28132645 STACK = (#f #f 0 2)
jump id
@28132646 STACK = (#f #f "" "_0")
if
@28132647 STACK = (#f "" "_0")
get false
@28132648 STACK = (#f #f "" "_0")
jump id
@28132649 STACK = (#f #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
if
@28132650 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 1
@28132651 STACK = ("_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
get 3
@28132652 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
call field1
@28132653 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> ... . ()))
jump string->symbol-aux
@28132654 STACK = ("_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 1
@28132655 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call pair?
@28132656 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 0
@28132657 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call rib?
@28132658 STACK = (#t (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
if
@28132659 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 0
@28132660 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field2
@28132661 STACK = (0 (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 4
@28132662 STACK = (0 0 (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
jump eqv?
@28132663 STACK = (#t "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
if
@28132664 STACK = ("_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 1
@28132665 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field0
@28132666 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 0
@28132667 STACK = (#<symbol ""> #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field1
@28132668 STACK = ("" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 2
@28132669 STACK = ("_0" "" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call equal?
@28132670 STACK = ("" "_0")
get 0
@28132671 STACK = ("" "" "_0")
get 2
@28132672 STACK = ("_0" "" "" "_0")
call eqv?
@28132673 STACK = (#f "" "_0")
get 0
@28132674 STACK = (#f #f "" "_0")
if
@28132675 STACK = (#f "" "_0")
get 1
@28132676 STACK = ("" #f "" "_0")
call rib?
@28132677 STACK = (#t #f "" "_0")
if
@28132678 STACK = (#f "" "_0")
get 1
@28132679 STACK = ("" #f "" "_0")
call field2
@28132680 STACK = (3 #f "" "_0")
const 5
@28132681 STACK = (5 3 #f "" "_0")
call eqv?
@28132682 STACK = (#f #f "" "_0")
if
@28132683 STACK = (#f "" "_0")
get 2
@28132684 STACK = ("_0" #f "" "_0")
call rib?
@28132685 STACK = (#t #f "" "_0")
if
@28132686 STACK = (#f "" "_0")
get 1
@28132687 STACK = ("" #f "" "_0")
call field2
@28132688 STACK = (3 #f "" "_0")
get 3
@28132689 STACK = ("_0" 3 #f "" "_0")
call field2
@28132690 STACK = (3 3 #f "" "_0")
call equal?
@28132691 STACK = (3 3)
get 0
@28132692 STACK = (3 3 3)
get 2
@28132693 STACK = (3 3 3 3)
call eqv?
@28132694 STACK = (#t 3 3)
get 0
@28132695 STACK = (#t #t 3 3)
if
@28132696 STACK = (#t 3 3)
get 0
@28132697 STACK = (#t #t 3 3)
jump id
@28132698 STACK = (#t #f "" "_0")
if
@28132699 STACK = (#f "" "_0")
get 1
@28132700 STACK = ("" #f "" "_0")
call field1
@28132701 STACK = (0 #f "" "_0")
get 3
@28132702 STACK = ("_0" 0 #f "" "_0")
call field1
@28132703 STACK = (2 0 #f "" "_0")
call equal?
@28132704 STACK = (0 2)
get 0
@28132705 STACK = (0 0 2)
get 2
@28132706 STACK = (2 0 0 2)
call eqv?
@28132707 STACK = (#f 0 2)
get 0
@28132708 STACK = (#f #f 0 2)
if
@28132709 STACK = (#f 0 2)
get 1
@28132710 STACK = (0 #f 0 2)
call rib?
@28132711 STACK = (#f #f 0 2)
if
@28132712 STACK = (#f 0 2)
get false
@28132713 STACK = (#f #f 0 2)
jump id
@28132714 STACK = (#f #f "" "_0")
if
@28132715 STACK = (#f "" "_0")
get false
@28132716 STACK = (#f #f "" "_0")
jump id
@28132717 STACK = (#f #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
if
@28132718 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 1
@28132719 STACK = ("_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 3
@28132720 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field1
@28132721 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
jump string->symbol-aux
@28132722 STACK = ("_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 1
@28132723 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call pair?
@28132724 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 0
@28132725 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call rib?
@28132726 STACK = (#t (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
if
@28132727 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 0
@28132728 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field2
@28132729 STACK = (0 (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 4
@28132730 STACK = (0 0 (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
jump eqv?
@28132731 STACK = (#t "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
if
@28132732 STACK = ("_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 1
@28132733 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field0
@28132734 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 0
@28132735 STACK = (#<symbol ""> #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field1
@28132736 STACK = ("" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 2
@28132737 STACK = ("_0" "" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call equal?
@28132738 STACK = ("" "_0")
get 0
@28132739 STACK = ("" "" "_0")
get 2
@28132740 STACK = ("_0" "" "" "_0")
call eqv?
@28132741 STACK = (#f "" "_0")
get 0
@28132742 STACK = (#f #f "" "_0")
if
@28132743 STACK = (#f "" "_0")
get 1
@28132744 STACK = ("" #f "" "_0")
call rib?
@28132745 STACK = (#t #f "" "_0")
if
@28132746 STACK = (#f "" "_0")
get 1
@28132747 STACK = ("" #f "" "_0")
call field2
@28132748 STACK = (3 #f "" "_0")
const 5
@28132749 STACK = (5 3 #f "" "_0")
call eqv?
@28132750 STACK = (#f #f "" "_0")
if
@28132751 STACK = (#f "" "_0")
get 2
@28132752 STACK = ("_0" #f "" "_0")
call rib?
@28132753 STACK = (#t #f "" "_0")
if
@28132754 STACK = (#f "" "_0")
get 1
@28132755 STACK = ("" #f "" "_0")
call field2
@28132756 STACK = (3 #f "" "_0")
get 3
@28132757 STACK = ("_0" 3 #f "" "_0")
call field2
@28132758 STACK = (3 3 #f "" "_0")
call equal?
@28132759 STACK = (3 3)
get 0
@28132760 STACK = (3 3 3)
get 2
@28132761 STACK = (3 3 3 3)
call eqv?
@28132762 STACK = (#t 3 3)
get 0
@28132763 STACK = (#t #t 3 3)
if
@28132764 STACK = (#t 3 3)
get 0
@28132765 STACK = (#t #t 3 3)
jump id
@28132766 STACK = (#t #f "" "_0")
if
@28132767 STACK = (#f "" "_0")
get 1
@28132768 STACK = ("" #f "" "_0")
call field1
@28132769 STACK = (0 #f "" "_0")
get 3
@28132770 STACK = ("_0" 0 #f "" "_0")
call field1
@28132771 STACK = (2 0 #f "" "_0")
call equal?
@28132772 STACK = (0 2)
get 0
@28132773 STACK = (0 0 2)
get 2
@28132774 STACK = (2 0 0 2)
call eqv?
@28132775 STACK = (#f 0 2)
get 0
@28132776 STACK = (#f #f 0 2)
if
@28132777 STACK = (#f 0 2)
get 1
@28132778 STACK = (0 #f 0 2)
call rib?
@28132779 STACK = (#f #f 0 2)
if
@28132780 STACK = (#f 0 2)
get false
@28132781 STACK = (#f #f 0 2)
jump id
@28132782 STACK = (#f #f "" "_0")
if
@28132783 STACK = (#f "" "_0")
get false
@28132784 STACK = (#f #f "" "_0")
jump id
@28132785 STACK = (#f #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
if
@28132786 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 1
@28132787 STACK = ("_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 3
@28132788 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field1
@28132789 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> #<symbol ""> . ()))
jump string->symbol-aux
@28132790 STACK = ("_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 1
@28132791 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
call pair?
@28132792 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 0
@28132793 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> . ()) (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
call rib?
@28132794 STACK = (#t (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
if
@28132795 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 0
@28132796 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> . ()) (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field2
@28132797 STACK = (0 (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 4
@28132798 STACK = (0 0 (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
jump eqv?
@28132799 STACK = (#t "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
if
@28132800 STACK = ("_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 1
@28132801 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field0
@28132802 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 0
@28132803 STACK = (#<symbol ""> #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field1
@28132804 STACK = ("" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 2
@28132805 STACK = ("_0" "" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
call equal?
@28132806 STACK = ("" "_0")
get 0
@28132807 STACK = ("" "" "_0")
get 2
@28132808 STACK = ("_0" "" "" "_0")
call eqv?
@28132809 STACK = (#f "" "_0")
get 0
@28132810 STACK = (#f #f "" "_0")
if
@28132811 STACK = (#f "" "_0")
get 1
@28132812 STACK = ("" #f "" "_0")
call rib?
@28132813 STACK = (#t #f "" "_0")
if
@28132814 STACK = (#f "" "_0")
get 1
@28132815 STACK = ("" #f "" "_0")
call field2
@28132816 STACK = (3 #f "" "_0")
const 5
@28132817 STACK = (5 3 #f "" "_0")
call eqv?
@28132818 STACK = (#f #f "" "_0")
if
@28132819 STACK = (#f "" "_0")
get 2
@28132820 STACK = ("_0" #f "" "_0")
call rib?
@28132821 STACK = (#t #f "" "_0")
if
@28132822 STACK = (#f "" "_0")
get 1
@28132823 STACK = ("" #f "" "_0")
call field2
@28132824 STACK = (3 #f "" "_0")
get 3
@28132825 STACK = ("_0" 3 #f "" "_0")
call field2
@28132826 STACK = (3 3 #f "" "_0")
call equal?
@28132827 STACK = (3 3)
get 0
@28132828 STACK = (3 3 3)
get 2
@28132829 STACK = (3 3 3 3)
call eqv?
@28132830 STACK = (#t 3 3)
get 0
@28132831 STACK = (#t #t 3 3)
if
@28132832 STACK = (#t 3 3)
get 0
@28132833 STACK = (#t #t 3 3)
jump id
@28132834 STACK = (#t #f "" "_0")
if
@28132835 STACK = (#f "" "_0")
get 1
@28132836 STACK = ("" #f "" "_0")
call field1
@28132837 STACK = (0 #f "" "_0")
get 3
@28132838 STACK = ("_0" 0 #f "" "_0")
call field1
@28132839 STACK = (2 0 #f "" "_0")
call equal?
@28132840 STACK = (0 2)
get 0
@28132841 STACK = (0 0 2)
get 2
@28132842 STACK = (2 0 0 2)
call eqv?
@28132843 STACK = (#f 0 2)
get 0
@28132844 STACK = (#f #f 0 2)
if
@28132845 STACK = (#f 0 2)
get 1
@28132846 STACK = (0 #f 0 2)
call rib?
@28132847 STACK = (#f #f 0 2)
if
@28132848 STACK = (#f 0 2)
get false
@28132849 STACK = (#f #f 0 2)
jump id
@28132850 STACK = (#f #f "" "_0")
if
@28132851 STACK = (#f "" "_0")
get false
@28132852 STACK = (#f #f "" "_0")
jump id
@28132853 STACK = (#f #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
if
@28132854 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 1
@28132855 STACK = ("_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
get 3
@28132856 STACK = ((#<symbol ""> #<symbol ""> #<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
call field1
@28132857 STACK = ((#<symbol ""> #<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> #<symbol ""> . ()))
jump string->symbol-aux
@28132858 STACK = ("_0" (#<symbol ""> #<symbol ""> . ()))
get 1
@28132859 STACK = ((#<symbol ""> #<symbol ""> . ()) "_0" (#<symbol ""> #<symbol ""> . ()))
call pair?
@28132860 STACK = ((#<symbol ""> #<symbol ""> . ()))
get 0
@28132861 STACK = ((#<symbol ""> #<symbol ""> . ()) (#<symbol ""> #<symbol ""> . ()))
call rib?
@28132862 STACK = (#t (#<symbol ""> #<symbol ""> . ()))
if
@28132863 STACK = ((#<symbol ""> #<symbol ""> . ()))
get 0
@28132864 STACK = ((#<symbol ""> #<symbol ""> . ()) (#<symbol ""> #<symbol ""> . ()))
call field2
@28132865 STACK = (0 (#<symbol ""> #<symbol ""> . ()))
get 4
@28132866 STACK = (0 0 (#<symbol ""> #<symbol ""> . ()))
jump eqv?
@28132867 STACK = (#t "_0" (#<symbol ""> #<symbol ""> . ()))
if
@28132868 STACK = ("_0" (#<symbol ""> #<symbol ""> . ()))
get 1
@28132869 STACK = ((#<symbol ""> #<symbol ""> . ()) "_0" (#<symbol ""> #<symbol ""> . ()))
call field0
@28132870 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> . ()))
get 0
@28132871 STACK = (#<symbol ""> #<symbol ""> "_0" (#<symbol ""> #<symbol ""> . ()))
call field1
@28132872 STACK = ("" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> . ()))
get 2
@28132873 STACK = ("_0" "" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> . ()))
call equal?
@28132874 STACK = ("" "_0")
get 0
@28132875 STACK = ("" "" "_0")
get 2
@28132876 STACK = ("_0" "" "" "_0")
call eqv?
@28132877 STACK = (#f "" "_0")
get 0
@28132878 STACK = (#f #f "" "_0")
if
@28132879 STACK = (#f "" "_0")
get 1
@28132880 STACK = ("" #f "" "_0")
call rib?
@28132881 STACK = (#t #f "" "_0")
if
@28132882 STACK = (#f "" "_0")
get 1
@28132883 STACK = ("" #f "" "_0")
call field2
@28132884 STACK = (3 #f "" "_0")
const 5
@28132885 STACK = (5 3 #f "" "_0")
call eqv?
@28132886 STACK = (#f #f "" "_0")
if
@28132887 STACK = (#f "" "_0")
get 2
@28132888 STACK = ("_0" #f "" "_0")
call rib?
@28132889 STACK = (#t #f "" "_0")
if
@28132890 STACK = (#f "" "_0")
get 1
@28132891 STACK = ("" #f "" "_0")
call field2
@28132892 STACK = (3 #f "" "_0")
get 3
@28132893 STACK = ("_0" 3 #f "" "_0")
call field2
@28132894 STACK = (3 3 #f "" "_0")
call equal?
@28132895 STACK = (3 3)
get 0
@28132896 STACK = (3 3 3)
get 2
@28132897 STACK = (3 3 3 3)
call eqv?
@28132898 STACK = (#t 3 3)
get 0
@28132899 STACK = (#t #t 3 3)
if
@28132900 STACK = (#t 3 3)
get 0
@28132901 STACK = (#t #t 3 3)
jump id
@28132902 STACK = (#t #f "" "_0")
if
@28132903 STACK = (#f "" "_0")
get 1
@28132904 STACK = ("" #f "" "_0")
call field1
@28132905 STACK = (0 #f "" "_0")
get 3
@28132906 STACK = ("_0" 0 #f "" "_0")
call field1
@28132907 STACK = (2 0 #f "" "_0")
call equal?
@28132908 STACK = (0 2)
get 0
@28132909 STACK = (0 0 2)
get 2
@28132910 STACK = (2 0 0 2)
call eqv?
@28132911 STACK = (#f 0 2)
get 0
@28132912 STACK = (#f #f 0 2)
if
@28132913 STACK = (#f 0 2)
get 1
@28132914 STACK = (0 #f 0 2)
call rib?
@28132915 STACK = (#f #f 0 2)
if
@28132916 STACK = (#f 0 2)
get false
@28132917 STACK = (#f #f 0 2)
jump id
@28132918 STACK = (#f #f "" "_0")
if
@28132919 STACK = (#f "" "_0")
get false
@28132920 STACK = (#f #f "" "_0")
jump id
@28132921 STACK = (#f #<symbol ""> "_0" (#<symbol ""> #<symbol ""> . ()))
if
@28132922 STACK = (#<symbol ""> "_0" (#<symbol ""> #<symbol ""> . ()))
get 1
@28132923 STACK = ("_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> . ()))
get 3
@28132924 STACK = ((#<symbol ""> #<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> . ()))
call field1
@28132925 STACK = ((#<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> #<symbol ""> . ()))
jump string->symbol-aux
@28132926 STACK = ("_0" (#<symbol ""> . ()))
get 1
@28132927 STACK = ((#<symbol ""> . ()) "_0" (#<symbol ""> . ()))
call pair?
@28132928 STACK = ((#<symbol ""> . ()))
get 0
@28132929 STACK = ((#<symbol ""> . ()) (#<symbol ""> . ()))
call rib?
@28132930 STACK = (#t (#<symbol ""> . ()))
if
@28132931 STACK = ((#<symbol ""> . ()))
get 0
@28132932 STACK = ((#<symbol ""> . ()) (#<symbol ""> . ()))
call field2
@28132933 STACK = (0 (#<symbol ""> . ()))
get 4
@28132934 STACK = (0 0 (#<symbol ""> . ()))
jump eqv?
@28132935 STACK = (#t "_0" (#<symbol ""> . ()))
if
@28132936 STACK = ("_0" (#<symbol ""> . ()))
get 1
@28132937 STACK = ((#<symbol ""> . ()) "_0" (#<symbol ""> . ()))
call field0
@28132938 STACK = (#<symbol ""> "_0" (#<symbol ""> . ()))
get 0
@28132939 STACK = (#<symbol ""> #<symbol ""> "_0" (#<symbol ""> . ()))
call field1
@28132940 STACK = ("" #<symbol ""> "_0" (#<symbol ""> . ()))
get 2
@28132941 STACK = ("_0" "" #<symbol ""> "_0" (#<symbol ""> . ()))
call equal?
@28132942 STACK = ("" "_0")
get 0
@28132943 STACK = ("" "" "_0")
get 2
@28132944 STACK = ("_0" "" "" "_0")
call eqv?
@28132945 STACK = (#f "" "_0")
get 0
@28132946 STACK = (#f #f "" "_0")
if
@28132947 STACK = (#f "" "_0")
get 1
@28132948 STACK = ("" #f "" "_0")
call rib?
@28132949 STACK = (#t #f "" "_0")
if
@28132950 STACK = (#f "" "_0")
get 1
@28132951 STACK = ("" #f "" "_0")
call field2
@28132952 STACK = (3 #f "" "_0")
const 5
@28132953 STACK = (5 3 #f "" "_0")
call eqv?
@28132954 STACK = (#f #f "" "_0")
if
@28132955 STACK = (#f "" "_0")
get 2
@28132956 STACK = ("_0" #f "" "_0")
call rib?
@28132957 STACK = (#t #f "" "_0")
if
@28132958 STACK = (#f "" "_0")
get 1
@28132959 STACK = ("" #f "" "_0")
call field2
@28132960 STACK = (3 #f "" "_0")
get 3
@28132961 STACK = ("_0" 3 #f "" "_0")
call field2
@28132962 STACK = (3 3 #f "" "_0")
call equal?
@28132963 STACK = (3 3)
get 0
@28132964 STACK = (3 3 3)
get 2
@28132965 STACK = (3 3 3 3)
call eqv?
@28132966 STACK = (#t 3 3)
get 0
@28132967 STACK = (#t #t 3 3)
if
@28132968 STACK = (#t 3 3)
get 0
@28132969 STACK = (#t #t 3 3)
jump id
@28132970 STACK = (#t #f "" "_0")
if
@28132971 STACK = (#f "" "_0")
get 1
@28132972 STACK = ("" #f "" "_0")
call field1
@28132973 STACK = (0 #f "" "_0")
get 3
@28132974 STACK = ("_0" 0 #f "" "_0")
call field1
@28132975 STACK = (2 0 #f "" "_0")
call equal?
@28132976 STACK = (0 2)
get 0
@28132977 STACK = (0 0 2)
get 2
@28132978 STACK = (2 0 0 2)
call eqv?
@28132979 STACK = (#f 0 2)
get 0
@28132980 STACK = (#f #f 0 2)
if
@28132981 STACK = (#f 0 2)
get 1
@28132982 STACK = (0 #f 0 2)
call rib?
@28132983 STACK = (#f #f 0 2)
if
@28132984 STACK = (#f 0 2)
get false
@28132985 STACK = (#f #f 0 2)
jump id
@28132986 STACK = (#f #f "" "_0")
if
@28132987 STACK = (#f "" "_0")
get false
@28132988 STACK = (#f #f "" "_0")
jump id
@28132989 STACK = (#f #<symbol ""> "_0" (#<symbol ""> . ()))
if
@28132990 STACK = (#<symbol ""> "_0" (#<symbol ""> . ()))
get 1
@28132991 STACK = ("_0" #<symbol ""> "_0" (#<symbol ""> . ()))
get 3
@28132992 STACK = ((#<symbol ""> . ()) "_0" #<symbol ""> "_0" (#<symbol ""> . ()))
call field1
@28132993 STACK = (() "_0" #<symbol ""> "_0" (#<symbol ""> . ()))
jump string->symbol-aux
@28132994 STACK = ("_0" ())
get 1
@28132995 STACK = (() "_0" ())
call pair?
@28132996 STACK = (())
get 0
@28132997 STACK = (() ())
call rib?
@28132998 STACK = (#t ())
if
@28132999 STACK = (())
get 0
@28133000 STACK = (() ())
call field2
@28133001 STACK = (5 ())
get 4
@28133002 STACK = (0 5 ())
jump eqv?
@28133003 STACK = (#f "_0" ())
if
@28133004 STACK = ("_0" ())
get 0
@28133005 STACK = ("_0" "_0" ())
call string->uninterned-symbol
@28133006 STACK = ("_0")
get false
@28133007 STACK = (#f "_0")
get 1
@28133008 STACK = ("_0" #f "_0")
const 2
@28133009 STACK = (2 "_0" #f "_0")
jump rib
@28133010 STACK = (_0 "_0" ())
get 0
@28133011 STACK = (_0 _0 "_0" ())
get symtbl
@28133012 STACK = ((info msg vars var-cont v ... . ()) _0 _0 "_0" ())
call cons
@28133013 STACK = (_0 (info msg vars var-cont v ... . ()))
get 0
@28133014 STACK = (_0 _0 (info msg vars var-cont v ... . ()))
get 2
@28133015 STACK = ((info msg vars var-cont v ... . ()) _0 _0 (info msg vars var-cont v ... . ()))
const 0
@28133016 STACK = (0 (info msg vars var-cont v ... . ()) _0 _0 (info msg vars var-cont v ... . ()))
jump rib
@28133017 STACK = ((_0 info msg vars var-cont ... . ()) _0 "_0" ())
set symtbl
@28133018 STACK = (_0 "_0" ())
get 0
@28133019 STACK = (_0 _0 "_0" ())
jump id
@28133020 STACK = (_0 #f [0,0,5])
get 20
@28133021 STACK = (0 _0 #f [0,0,5])
const 1
@28133022 STACK = (1 0 _0 #f [0,0,5])
call +
@28133023 STACK = (1 _0 #f [0,0,5])
set 21
@28133024 STACK = (_0 #f [0,0,5])
get 2
@28133025 STACK = ([0,0,5] _0 #f [0,0,5])
get 1
@28133026 STACK = (_0 [0,0,5] _0 #f [0,0,5])
call 27
@28133027 STACK = ([0,0,5] _0)
get 0
@28133028 STACK = ([0,0,5] [0,0,5] _0)
const 0
@28133029 STACK = (0 [0,0,5] [0,0,5] _0)
call 27
@28133030 STACK = ([0,0,5] 0)
get 0
@28133031 STACK = ([0,0,5] [0,0,5] 0)
get #<symbol "">
@28133032 STACK = ((#f #t () . ()) [0,0,5] [0,0,5] 0)
call memv
@28133033 STACK = ([0,0,5] (#f #t () . ()))
get 1
@28133034 STACK = ((#f #t () . ()) [0,0,5] (#f #t () . ()))
call pair?
@28133035 STACK = ((#f #t () . ()))
get 0
@28133036 STACK = ((#f #t () . ()) (#f #t () . ()))
call rib?
@28133037 STACK = (#t (#f #t () . ()))
if
@28133038 STACK = ((#f #t () . ()))
get 0
@28133039 STACK = ((#f #t () . ()) (#f #t () . ()))
call field2
@28133040 STACK = (0 (#f #t () . ()))
get 4
@28133041 STACK = (0 0 (#f #t () . ()))
jump eqv?
@28133042 STACK = (#t [0,0,5] (#f #t () . ()))
if
@28133043 STACK = ([0,0,5] (#f #t () . ()))
get 0
@28133044 STACK = ([0,0,5] [0,0,5] (#f #t () . ()))
get 2
@28133045 STACK = ((#f #t () . ()) [0,0,5] [0,0,5] (#f #t () . ()))
call car
@28133046 STACK = (#f [0,0,5] [0,0,5] (#f #t () . ()))
call eqv?
@28133047 STACK = (#f [0,0,5] (#f #t () . ()))
if
@28133048 STACK = ([0,0,5] (#f #t () . ()))
get 0
@28133049 STACK = ([0,0,5] [0,0,5] (#f #t () . ()))
get 2
@28133050 STACK = ((#f #t () . ()) [0,0,5] [0,0,5] (#f #t () . ()))
call cdr
@28133051 STACK = ((#t () . ()) [0,0,5] [0,0,5] (#f #t () . ()))
jump memv
@28133052 STACK = ([0,0,5] (#t () . ()))
get 1
@28133053 STACK = ((#t () . ()) [0,0,5] (#t () . ()))
call pair?
@28133054 STACK = ((#t () . ()))
get 0
@28133055 STACK = ((#t () . ()) (#t () . ()))
call rib?
@28133056 STACK = (#t (#t () . ()))
if
@28133057 STACK = ((#t () . ()))
get 0
@28133058 STACK = ((#t () . ()) (#t () . ()))
call field2
@28133059 STACK = (0 (#t () . ()))
get 4
@28133060 STACK = (0 0 (#t () . ()))
jump eqv?
@28133061 STACK = (#t [0,0,5] (#t () . ()))
if
@28133062 STACK = ([0,0,5] (#t () . ()))
get 0
@28133063 STACK = ([0,0,5] [0,0,5] (#t () . ()))
get 2
@28133064 STACK = ((#t () . ()) [0,0,5] [0,0,5] (#t () . ()))
call car
@28133065 STACK = (#t [0,0,5] [0,0,5] (#t () . ()))
call eqv?
@28133066 STACK = (#f [0,0,5] (#t () . ()))
if
@28133067 STACK = ([0,0,5] (#t () . ()))
get 0
@28133068 STACK = ([0,0,5] [0,0,5] (#t () . ()))
get 2
@28133069 STACK = ((#t () . ()) [0,0,5] [0,0,5] (#t () . ()))
call cdr
@28133070 STACK = ((() . ()) [0,0,5] [0,0,5] (#t () . ()))
jump memv
@28133071 STACK = ([0,0,5] (() . ()))
get 1
@28133072 STACK = ((() . ()) [0,0,5] (() . ()))
call pair?
@28133073 STACK = ((() . ()))
get 0
@28133074 STACK = ((() . ()) (() . ()))
call rib?
@28133075 STACK = (#t (() . ()))
if
@28133076 STACK = ((() . ()))
get 0
@28133077 STACK = ((() . ()) (() . ()))
call field2
@28133078 STACK = (0 (() . ()))
get 4
@28133079 STACK = (0 0 (() . ()))
jump eqv?
@28133080 STACK = (#t [0,0,5] (() . ()))
if
@28133081 STACK = ([0,0,5] (() . ()))
get 0
@28133082 STACK = ([0,0,5] [0,0,5] (() . ()))
get 2
@28133083 STACK = ((() . ()) [0,0,5] [0,0,5] (() . ()))
call car
@28133084 STACK = (() [0,0,5] [0,0,5] (() . ()))
call eqv?
@28133085 STACK = (#f [0,0,5] (() . ()))
if
@28133086 STACK = ([0,0,5] (() . ()))
get 0
@28133087 STACK = ([0,0,5] [0,0,5] (() . ()))
get 2
@28133088 STACK = ((() . ()) [0,0,5] [0,0,5] (() . ()))
call cdr
@28133089 STACK = (() [0,0,5] [0,0,5] (() . ()))
jump memv
@28133090 STACK = ([0,0,5] ())
get 1
@28133091 STACK = (() [0,0,5] ())
call pair?
@28133092 STACK = (())
get 0
@28133093 STACK = (() ())
call rib?
@28133094 STACK = (#t ())
if
@28133095 STACK = (())
get 0
@28133096 STACK = (() ())
call field2
@28133097 STACK = (5 ())
get 4
@28133098 STACK = (0 5 ())
jump eqv?
@28133099 STACK = (#f [0,0,5] ())
if
@28133100 STACK = ([0,0,5] ())
get false
@28133101 STACK = (#f [0,0,5] ())
jump id
@28133102 STACK = (#f [0,0,5] 0)
get 0
@28133103 STACK = (#f #f [0,0,5] 0)
if
@28133104 STACK = (#f [0,0,5] 0)
get 1
@28133105 STACK = ([0,0,5] #f [0,0,5] 0)
get 28
@28133106 STACK = (() [0,0,5] #f [0,0,5] 0)
call assq
@28133107 STACK = ([0,0,5] ())
get 1
@28133108 STACK = (() [0,0,5] ())
call pair?
@28133109 STACK = (())
get 0
@28133110 STACK = (() ())
call rib?
@28133111 STACK = (#t ())
if
@28133112 STACK = (())
get 0
@28133113 STACK = (() ())
call field2
@28133114 STACK = (5 ())
get 4
@28133115 STACK = (0 5 ())
jump eqv?
@28133116 STACK = (#f [0,0,5] ())
if
@28133117 STACK = ([0,0,5] ())
get false
@28133118 STACK = (#f [0,0,5] ())
jump id
@28133119 STACK = (#f #f [0,0,5] 0)
call arg2
@28133120 STACK = (#f [0,0,5] 0)
if
@28133121 STACK = ([0,0,5] 0)
get 0
@28133122 STACK = ([0,0,5] [0,0,5] 0)
call symbol?
@28133123 STACK = ([0,0,5])
get 0
@28133124 STACK = ([0,0,5] [0,0,5])
call rib?
@28133125 STACK = (#t [0,0,5])
if
@28133126 STACK = ([0,0,5])
get 0
@28133127 STACK = ([0,0,5] [0,0,5])
call field2
@28133128 STACK = (5 [0,0,5])
get 4
@28133129 STACK = (2 5 [0,0,5])
jump eqv?
@28133130 STACK = (#f [0,0,5] 0)
if
@28133131 STACK = ([0,0,5] 0)
get 0
@28133132 STACK = ([0,0,5] [0,0,5] 0)
call number?
@28133133 STACK = ([0,0,5])
get 0
@28133134 STACK = ([0,0,5] [0,0,5])
jump integer?
@28133135 STACK = ([0,0,5])
get 0
@28133136 STACK = ([0,0,5] [0,0,5])
call rib?
@28133137 STACK = (#t [0,0,5])
jump not
@28133138 STACK = (#t)
get 0
@28133139 STACK = (#t #t)
get false
@28133140 STACK = (#f #t #t)
jump eqv?
@28133141 STACK = (#f [0,0,5] 0)
if
@28133142 STACK = ([0,0,5] 0)
get 0
@28133143 STACK = ([0,0,5] [0,0,5] 0)
call pair?
@28133144 STACK = ([0,0,5])
get 0
@28133145 STACK = ([0,0,5] [0,0,5])
call rib?
@28133146 STACK = (#t [0,0,5])
if
@28133147 STACK = ([0,0,5])
get 0
@28133148 STACK = ([0,0,5] [0,0,5])
call field2
@28133149 STACK = (5 [0,0,5])
get 4
@28133150 STACK = (0 5 [0,0,5])
jump eqv?
@28133151 STACK = (#f [0,0,5] 0)
if
@28133152 STACK = ([0,0,5] 0)
get 0
@28133153 STACK = ([0,0,5] [0,0,5] 0)
call string?
@28133154 STACK = ([0,0,5])
get 0
@28133155 STACK = ([0,0,5] [0,0,5])
call rib?
@28133156 STACK = (#t [0,0,5])
if
@28133157 STACK = ([0,0,5])
get 0
@28133158 STACK = ([0,0,5] [0,0,5])
call field2
@28133159 STACK = (5 [0,0,5])
get 4
@28133160 STACK = (3 5 [0,0,5])
jump eqv?
@28133161 STACK = (#f [0,0,5] 0)
if
@28133162 STACK = ([0,0,5] 0)
get 0
@28133163 STACK = ([0,0,5] [0,0,5] 0)
call vector?
@28133164 STACK = ([0,0,5])
get 0
@28133165 STACK = ([0,0,5] [0,0,5])
call rib?
@28133166 STACK = (#t [0,0,5])
if
@28133167 STACK = ([0,0,5])
get 0
@28133168 STACK = ([0,0,5] [0,0,5])
call field2
@28133169 STACK = (5 [0,0,5])
get 4
@28133170 STACK = (4 5 [0,0,5])
jump eqv?
@28133171 STACK = (#f [0,0,5] 0)
if
@28133172 STACK = ([0,0,5] 0)
get #<symbol "">
@28133173 STACK = ("can't build constant" [0,0,5] 0)
get 1
@28133174 STACK = ([0,0,5] "can't build constant" [0,0,5] 0)
jump error
@28133175 STACK = ("can't build constant" [0,0,5])
get 0
@28133176 STACK = ("can't build constant" "can't build constant" [0,0,5])
call display
@28133177 STACK = ("can't build constant")
get 0
@28133178 STACK = ("can't build constant" "can't build constant")
call not
@28133179 STACK = ("can't build constant")
get 0
@28133180 STACK = ("can't build constant" "can't build constant")
get false
@28133181 STACK = (#f "can't build constant" "can't build constant")
jump eqv?
@28133182 STACK = (#f "can't build constant")
if
@28133183 STACK = ("can't build constant")
get 0
@28133184 STACK = ("can't build constant" "can't build constant")
get true
@28133185 STACK = (#t "can't build constant" "can't build constant")
call eqv?
@28133186 STACK = (#f "can't build constant")
if
@28133187 STACK = ("can't build constant")
get 0
@28133188 STACK = ("can't build constant" "can't build constant")
call null?
@28133189 STACK = ("can't build constant")
get 0
@28133190 STACK = ("can't build constant" "can't build constant")
get nil
@28133191 STACK = (() "can't build constant" "can't build constant")
jump eqv?
@28133192 STACK = (#f "can't build constant")
if
@28133193 STACK = ("can't build constant")
get 0
@28133194 STACK = ("can't build constant" "can't build constant")
call pair?
@28133195 STACK = ("can't build constant")
get 0
@28133196 STACK = ("can't build constant" "can't build constant")
call rib?
@28133197 STACK = (#t "can't build constant")
if
@28133198 STACK = ("can't build constant")
get 0
@28133199 STACK = ("can't build constant" "can't build constant")
call field2
@28133200 STACK = (3 "can't build constant")
get 4
@28133201 STACK = (0 3 "can't build constant")
jump eqv?
@28133202 STACK = (#f "can't build constant")
if
@28133203 STACK = ("can't build constant")
get 0
@28133204 STACK = ("can't build constant" "can't build constant")
call symbol?
@28133205 STACK = ("can't build constant")
get 0
@28133206 STACK = ("can't build constant" "can't build constant")
call rib?
@28133207 STACK = (#t "can't build constant")
if
@28133208 STACK = ("can't build constant")
get 0
@28133209 STACK = ("can't build constant" "can't build constant")
call field2
@28133210 STACK = (3 "can't build constant")
get 4
@28133211 STACK = (2 3 "can't build constant")
jump eqv?
@28133212 STACK = (#f "can't build constant")
if
@28133213 STACK = ("can't build constant")
get 0
@28133214 STACK = ("can't build constant" "can't build constant")
call string?
@28133215 STACK = ("can't build constant")
get 0
@28133216 STACK = ("can't build constant" "can't build constant")
call rib?
@28133217 STACK = (#t "can't build constant")
if
@28133218 STACK = ("can't build constant")
get 0
@28133219 STACK = ("can't build constant" "can't build constant")
call field2
@28133220 STACK = (3 "can't build constant")
get 4
@28133221 STACK = (3 3 "can't build constant")
jump eqv?
@28133222 STACK = (#t "can't build constant")
if
@28133223 STACK = ("can't build constant")
get 0
@28133224 STACK = ("can't build constant" "can't build constant")
call string->list
@28133225 STACK = ((99 97 110 39 116 ... . ()) "can't build constant")
get false
@28133226 STACK = (#f (99 97 110 39 116 ... . ()) "can't build constant")
jump write-chars
@28133227 STACK = ((99 97 110 39 116 ... . ()) #f)
get 0
@28133228 STACK = ((99 97 110 39 116 ... . ()) (99 97 110 39 116 ... . ()) #f)
call pair?
@28133229 STACK = ((99 97 110 39 116 ... . ()))
get 0
@28133230 STACK = ((99 97 110 39 116 ... . ()) (99 97 110 39 116 ... . ()))
call rib?
@28133231 STACK = (#t (99 97 110 39 116 ... . ()))
if
@28133232 STACK = ((99 97 110 39 116 ... . ()))
get 0
@28133233 STACK = ((99 97 110 39 116 ... . ()) (99 97 110 39 116 ... . ()))
call field2
@28133234 STACK = (0 (99 97 110 39 116 ... . ()))
get 4
@28133235 STACK = (0 0 (99 97 110 39 116 ... . ()))
jump eqv?
@28133236 STACK = (#t (99 97 110 39 116 ... . ()) #f)
if
@28133237 STACK = ((99 97 110 39 116 ... . ()) #f)
get 0
@28133238 STACK = ((99 97 110 39 116 ... . ()) (99 97 110 39 116 ... . ()) #f)
call car
@28133239 STACK = (99 (99 97 110 39 116 ... . ()) #f)
get 2
@28133240 STACK = (#f 99 (99 97 110 39 116 ... . ()) #f)
call not
@28133241 STACK = (#f)
get 0
@28133242 STACK = (#f #f)
get false
@28133243 STACK = (#f #f #f)
jump eqv?
@28133244 STACK = (#t 99 (99 97 110 39 116 ... . ()) #f)
if
@28133245 STACK = (99 (99 97 110 39 116 ... . ()) #f)
get 0
@28133246 STACK = (99 99 (99 97 110 39 116 ... . ()) #f)
call putchar
c@28133247 STACK = (99 99 (99 97 110 39 116 ... . ()) #f)
call arg1
@28133248 STACK = (99 (99 97 110 39 116 ... . ()) #f)
get 1
@28133249 STACK = ((99 97 110 39 116 ... . ()) 99 (99 97 110 39 116 ... . ()) #f)
call cdr
@28133250 STACK = ((97 110 39 116 32 ... . ()) 99 (99 97 110 39 116 ... . ()) #f)
get 3
@28133251 STACK = (#f (97 110 39 116 32 ... . ()) 99 (99 97 110 39 116 ... . ()) #f)
jump write-chars
@28133252 STACK = ((97 110 39 116 32 ... . ()) #f)
get 0
@28133253 STACK = ((97 110 39 116 32 ... . ()) (97 110 39 116 32 ... . ()) #f)
call pair?
@28133254 STACK = ((97 110 39 116 32 ... . ()))
get 0
@28133255 STACK = ((97 110 39 116 32 ... . ()) (97 110 39 116 32 ... . ()))
call rib?
@28133256 STACK = (#t (97 110 39 116 32 ... . ()))
if
@28133257 STACK = ((97 110 39 116 32 ... . ()))
get 0
@28133258 STACK = ((97 110 39 116 32 ... . ()) (97 110 39 116 32 ... . ()))
call field2
@28133259 STACK = (0 (97 110 39 116 32 ... . ()))
get 4
@28133260 STACK = (0 0 (97 110 39 116 32 ... . ()))
jump eqv?
@28133261 STACK = (#t (97 110 39 116 32 ... . ()) #f)
if
@28133262 STACK = ((97 110 39 116 32 ... . ()) #f)
get 0
@28133263 STACK = ((97 110 39 116 32 ... . ()) (97 110 39 116 32 ... . ()) #f)
call car
@28133264 STACK = (97 (97 110 39 116 32 ... . ()) #f)
get 2
@28133265 STACK = (#f 97 (97 110 39 116 32 ... . ()) #f)
call not
@28133266 STACK = (#f)
get 0
@28133267 STACK = (#f #f)
get false
@28133268 STACK = (#f #f #f)
jump eqv?
@28133269 STACK = (#t 97 (97 110 39 116 32 ... . ()) #f)
if
@28133270 STACK = (97 (97 110 39 116 32 ... . ()) #f)
get 0
@28133271 STACK = (97 97 (97 110 39 116 32 ... . ()) #f)
call putchar
a@28133272 STACK = (97 97 (97 110 39 116 32 ... . ()) #f)
call arg1
@28133273 STACK = (97 (97 110 39 116 32 ... . ()) #f)
get 1
@28133274 STACK = ((97 110 39 116 32 ... . ()) 97 (97 110 39 116 32 ... . ()) #f)
call cdr
@28133275 STACK = ((110 39 116 32 98 ... . ()) 97 (97 110 39 116 32 ... . ()) #f)
get 3
@28133276 STACK = (#f (110 39 116 32 98 ... . ()) 97 (97 110 39 116 32 ... . ()) #f)
jump write-chars
@28133277 STACK = ((110 39 116 32 98 ... . ()) #f)
get 0
@28133278 STACK = ((110 39 116 32 98 ... . ()) (110 39 116 32 98 ... . ()) #f)
call pair?
@28133279 STACK = ((110 39 116 32 98 ... . ()))
get 0
@28133280 STACK = ((110 39 116 32 98 ... . ()) (110 39 116 32 98 ... . ()))
call rib?
@28133281 STACK = (#t (110 39 116 32 98 ... . ()))
if
@28133282 STACK = ((110 39 116 32 98 ... . ()))
get 0
@28133283 STACK = ((110 39 116 32 98 ... . ()) (110 39 116 32 98 ... . ()))
call field2
@28133284 STACK = (0 (110 39 116 32 98 ... . ()))
get 4
@28133285 STACK = (0 0 (110 39 116 32 98 ... . ()))
jump eqv?
@28133286 STACK = (#t (110 39 116 32 98 ... . ()) #f)
if
@28133287 STACK = ((110 39 116 32 98 ... . ()) #f)
get 0
@28133288 STACK = ((110 39 116 32 98 ... . ()) (110 39 116 32 98 ... . ()) #f)
call car
@28133289 STACK = (110 (110 39 116 32 98 ... . ()) #f)
get 2
@28133290 STACK = (#f 110 (110 39 116 32 98 ... . ()) #f)
call not
@28133291 STACK = (#f)
get 0
@28133292 STACK = (#f #f)
get false
@28133293 STACK = (#f #f #f)
jump eqv?
@28133294 STACK = (#t 110 (110 39 116 32 98 ... . ()) #f)
if
@28133295 STACK = (110 (110 39 116 32 98 ... . ()) #f)
get 0
@28133296 STACK = (110 110 (110 39 116 32 98 ... . ()) #f)
call putchar
n@28133297 STACK = (110 110 (110 39 116 32 98 ... . ()) #f)
call arg1
@28133298 STACK = (110 (110 39 116 32 98 ... . ()) #f)
get 1
@28133299 STACK = ((110 39 116 32 98 ... . ()) 110 (110 39 116 32 98 ... . ()) #f)
call cdr
@28133300 STACK = ((39 116 32 98 117 ... . ()) 110 (110 39 116 32 98 ... . ()) #f)
get 3
@28133301 STACK = (#f (39 116 32 98 117 ... . ()) 110 (110 39 116 32 98 ... . ()) #f)
jump write-chars
@28133302 STACK = ((39 116 32 98 117 ... . ()) #f)
get 0
@28133303 STACK = ((39 116 32 98 117 ... . ()) (39 116 32 98 117 ... . ()) #f)
call pair?
@28133304 STACK = ((39 116 32 98 117 ... . ()))
get 0
@28133305 STACK = ((39 116 32 98 117 ... . ()) (39 116 32 98 117 ... . ()))
call rib?
@28133306 STACK = (#t (39 116 32 98 117 ... . ()))
if
@28133307 STACK = ((39 116 32 98 117 ... . ()))
get 0
@28133308 STACK = ((39 116 32 98 117 ... . ()) (39 116 32 98 117 ... . ()))
call field2
@28133309 STACK = (0 (39 116 32 98 117 ... . ()))
get 4
@28133310 STACK = (0 0 (39 116 32 98 117 ... . ()))
jump eqv?
@28133311 STACK = (#t (39 116 32 98 117 ... . ()) #f)
if
@28133312 STACK = ((39 116 32 98 117 ... . ()) #f)
get 0
@28133313 STACK = ((39 116 32 98 117 ... . ()) (39 116 32 98 117 ... . ()) #f)
call car
@28133314 STACK = (39 (39 116 32 98 117 ... . ()) #f)
get 2
@28133315 STACK = (#f 39 (39 116 32 98 117 ... . ()) #f)
call not
@28133316 STACK = (#f)
get 0
@28133317 STACK = (#f #f)
get false
@28133318 STACK = (#f #f #f)
jump eqv?
@28133319 STACK = (#t 39 (39 116 32 98 117 ... . ()) #f)
if
@28133320 STACK = (39 (39 116 32 98 117 ... . ()) #f)
get 0
@28133321 STACK = (39 39 (39 116 32 98 117 ... . ()) #f)
call putchar
'@28133322 STACK = (39 39 (39 116 32 98 117 ... . ()) #f)
call arg1
@28133323 STACK = (39 (39 116 32 98 117 ... . ()) #f)
get 1
@28133324 STACK = ((39 116 32 98 117 ... . ()) 39 (39 116 32 98 117 ... . ()) #f)
call cdr
@28133325 STACK = ((116 32 98 117 105 ... . ()) 39 (39 116 32 98 117 ... . ()) #f)
get 3
@28133326 STACK = (#f (116 32 98 117 105 ... . ()) 39 (39 116 32 98 117 ... . ()) #f)
jump write-chars
@28133327 STACK = ((116 32 98 117 105 ... . ()) #f)
get 0
@28133328 STACK = ((116 32 98 117 105 ... . ()) (116 32 98 117 105 ... . ()) #f)
call pair?
@28133329 STACK = ((116 32 98 117 105 ... . ()))
get 0
@28133330 STACK = ((116 32 98 117 105 ... . ()) (116 32 98 117 105 ... . ()))
call rib?
@28133331 STACK = (#t (116 32 98 117 105 ... . ()))
if
@28133332 STACK = ((116 32 98 117 105 ... . ()))
get 0
@28133333 STACK = ((116 32 98 117 105 ... . ()) (116 32 98 117 105 ... . ()))
call field2
@28133334 STACK = (0 (116 32 98 117 105 ... . ()))
get 4
@28133335 STACK = (0 0 (116 32 98 117 105 ... . ()))
jump eqv?
@28133336 STACK = (#t (116 32 98 117 105 ... . ()) #f)
if
@28133337 STACK = ((116 32 98 117 105 ... . ()) #f)
get 0
@28133338 STACK = ((116 32 98 117 105 ... . ()) (116 32 98 117 105 ... . ()) #f)
call car
@28133339 STACK = (116 (116 32 98 117 105 ... . ()) #f)
get 2
@28133340 STACK = (#f 116 (116 32 98 117 105 ... . ()) #f)
call not
@28133341 STACK = (#f)
get 0
@28133342 STACK = (#f #f)
get false
@28133343 STACK = (#f #f #f)
jump eqv?
@28133344 STACK = (#t 116 (116 32 98 117 105 ... . ()) #f)
if
@28133345 STACK = (116 (116 32 98 117 105 ... . ()) #f)
get 0
@28133346 STACK = (116 116 (116 32 98 117 105 ... . ()) #f)
call putchar
t@28133347 STACK = (116 116 (116 32 98 117 105 ... . ()) #f)
call arg1
@28133348 STACK = (116 (116 32 98 117 105 ... . ()) #f)
get 1
@28133349 STACK = ((116 32 98 117 105 ... . ()) 116 (116 32 98 117 105 ... . ()) #f)
call cdr
@28133350 STACK = ((32 98 117 105 108 ... . ()) 116 (116 32 98 117 105 ... . ()) #f)
get 3
@28133351 STACK = (#f (32 98 117 105 108 ... . ()) 116 (116 32 98 117 105 ... . ()) #f)
jump write-chars
@28133352 STACK = ((32 98 117 105 108 ... . ()) #f)
get 0
@28133353 STACK = ((32 98 117 105 108 ... . ()) (32 98 117 105 108 ... . ()) #f)
call pair?
@28133354 STACK = ((32 98 117 105 108 ... . ()))
get 0
@28133355 STACK = ((32 98 117 105 108 ... . ()) (32 98 117 105 108 ... . ()))
call rib?
@28133356 STACK = (#t (32 98 117 105 108 ... . ()))
if
@28133357 STACK = ((32 98 117 105 108 ... . ()))
get 0
@28133358 STACK = ((32 98 117 105 108 ... . ()) (32 98 117 105 108 ... . ()))
call field2
@28133359 STACK = (0 (32 98 117 105 108 ... . ()))
get 4
@28133360 STACK = (0 0 (32 98 117 105 108 ... . ()))
jump eqv?
@28133361 STACK = (#t (32 98 117 105 108 ... . ()) #f)
if
@28133362 STACK = ((32 98 117 105 108 ... . ()) #f)
get 0
@28133363 STACK = ((32 98 117 105 108 ... . ()) (32 98 117 105 108 ... . ()) #f)
call car
@28133364 STACK = (32 (32 98 117 105 108 ... . ()) #f)
get 2
@28133365 STACK = (#f 32 (32 98 117 105 108 ... . ()) #f)
call not
@28133366 STACK = (#f)
get 0
@28133367 STACK = (#f #f)
get false
@28133368 STACK = (#f #f #f)
jump eqv?
@28133369 STACK = (#t 32 (32 98 117 105 108 ... . ()) #f)
if
@28133370 STACK = (32 (32 98 117 105 108 ... . ()) #f)
get 0
@28133371 STACK = (32 32 (32 98 117 105 108 ... . ()) #f)
call putchar
 @28133372 STACK = (32 32 (32 98 117 105 108 ... . ()) #f)
call arg1
@28133373 STACK = (32 (32 98 117 105 108 ... . ()) #f)
get 1
@28133374 STACK = ((32 98 117 105 108 ... . ()) 32 (32 98 117 105 108 ... . ()) #f)
call cdr
@28133375 STACK = ((98 117 105 108 100 ... . ()) 32 (32 98 117 105 108 ... . ()) #f)
get 3
@28133376 STACK = (#f (98 117 105 108 100 ... . ()) 32 (32 98 117 105 108 ... . ()) #f)
jump write-chars
@28133377 STACK = ((98 117 105 108 100 ... . ()) #f)
get 0
@28133378 STACK = ((98 117 105 108 100 ... . ()) (98 117 105 108 100 ... . ()) #f)
call pair?
@28133379 STACK = ((98 117 105 108 100 ... . ()))
get 0
@28133380 STACK = ((98 117 105 108 100 ... . ()) (98 117 105 108 100 ... . ()))
call rib?
@28133381 STACK = (#t (98 117 105 108 100 ... . ()))
if
@28133382 STACK = ((98 117 105 108 100 ... . ()))
get 0
@28133383 STACK = ((98 117 105 108 100 ... . ()) (98 117 105 108 100 ... . ()))
call field2
@28133384 STACK = (0 (98 117 105 108 100 ... . ()))
get 4
@28133385 STACK = (0 0 (98 117 105 108 100 ... . ()))
jump eqv?
@28133386 STACK = (#t (98 117 105 108 100 ... . ()) #f)
if
@28133387 STACK = ((98 117 105 108 100 ... . ()) #f)
get 0
@28133388 STACK = ((98 117 105 108 100 ... . ()) (98 117 105 108 100 ... . ()) #f)
call car
@28133389 STACK = (98 (98 117 105 108 100 ... . ()) #f)
get 2
@28133390 STACK = (#f 98 (98 117 105 108 100 ... . ()) #f)
call not
@28133391 STACK = (#f)
get 0
@28133392 STACK = (#f #f)
get false
@28133393 STACK = (#f #f #f)
jump eqv?
@28133394 STACK = (#t 98 (98 117 105 108 100 ... . ()) #f)
if
@28133395 STACK = (98 (98 117 105 108 100 ... . ()) #f)
get 0
@28133396 STACK = (98 98 (98 117 105 108 100 ... . ()) #f)
call putchar
b@28133397 STACK = (98 98 (98 117 105 108 100 ... . ()) #f)
call arg1
@28133398 STACK = (98 (98 117 105 108 100 ... . ()) #f)
get 1
@28133399 STACK = ((98 117 105 108 100 ... . ()) 98 (98 117 105 108 100 ... . ()) #f)
call cdr
@28133400 STACK = ((117 105 108 100 32 ... . ()) 98 (98 117 105 108 100 ... . ()) #f)
get 3
@28133401 STACK = (#f (117 105 108 100 32 ... . ()) 98 (98 117 105 108 100 ... . ()) #f)
jump write-chars
@28133402 STACK = ((117 105 108 100 32 ... . ()) #f)
get 0
@28133403 STACK = ((117 105 108 100 32 ... . ()) (117 105 108 100 32 ... . ()) #f)
call pair?
@28133404 STACK = ((117 105 108 100 32 ... . ()))
get 0
@28133405 STACK = ((117 105 108 100 32 ... . ()) (117 105 108 100 32 ... . ()))
call rib?
@28133406 STACK = (#t (117 105 108 100 32 ... . ()))
if
@28133407 STACK = ((117 105 108 100 32 ... . ()))
get 0
@28133408 STACK = ((117 105 108 100 32 ... . ()) (117 105 108 100 32 ... . ()))
call field2
@28133409 STACK = (0 (117 105 108 100 32 ... . ()))
get 4
@28133410 STACK = (0 0 (117 105 108 100 32 ... . ()))
jump eqv?
@28133411 STACK = (#t (117 105 108 100 32 ... . ()) #f)
if
@28133412 STACK = ((117 105 108 100 32 ... . ()) #f)
get 0
@28133413 STACK = ((117 105 108 100 32 ... . ()) (117 105 108 100 32 ... . ()) #f)
call car
@28133414 STACK = (117 (117 105 108 100 32 ... . ()) #f)
get 2
@28133415 STACK = (#f 117 (117 105 108 100 32 ... . ()) #f)
call not
@28133416 STACK = (#f)
get 0
@28133417 STACK = (#f #f)
get false
@28133418 STACK = (#f #f #f)
jump eqv?
@28133419 STACK = (#t 117 (117 105 108 100 32 ... . ()) #f)
if
@28133420 STACK = (117 (117 105 108 100 32 ... . ()) #f)
get 0
@28133421 STACK = (117 117 (117 105 108 100 32 ... . ()) #f)
call putchar
u@28133422 STACK = (117 117 (117 105 108 100 32 ... . ()) #f)
call arg1
@28133423 STACK = (117 (117 105 108 100 32 ... . ()) #f)
get 1
@28133424 STACK = ((117 105 108 100 32 ... . ()) 117 (117 105 108 100 32 ... . ()) #f)
call cdr
@28133425 STACK = ((105 108 100 32 99 ... . ()) 117 (117 105 108 100 32 ... . ()) #f)
get 3
@28133426 STACK = (#f (105 108 100 32 99 ... . ()) 117 (117 105 108 100 32 ... . ()) #f)
jump write-chars
@28133427 STACK = ((105 108 100 32 99 ... . ()) #f)
get 0
@28133428 STACK = ((105 108 100 32 99 ... . ()) (105 108 100 32 99 ... . ()) #f)
call pair?
@28133429 STACK = ((105 108 100 32 99 ... . ()))
get 0
@28133430 STACK = ((105 108 100 32 99 ... . ()) (105 108 100 32 99 ... . ()))
call rib?
@28133431 STACK = (#t (105 108 100 32 99 ... . ()))
if
@28133432 STACK = ((105 108 100 32 99 ... . ()))
get 0
@28133433 STACK = ((105 108 100 32 99 ... . ()) (105 108 100 32 99 ... . ()))
call field2
@28133434 STACK = (0 (105 108 100 32 99 ... . ()))
get 4
@28133435 STACK = (0 0 (105 108 100 32 99 ... . ()))
jump eqv?
@28133436 STACK = (#t (105 108 100 32 99 ... . ()) #f)
if
@28133437 STACK = ((105 108 100 32 99 ... . ()) #f)
get 0
@28133438 STACK = ((105 108 100 32 99 ... . ()) (105 108 100 32 99 ... . ()) #f)
call car
@28133439 STACK = (105 (105 108 100 32 99 ... . ()) #f)
get 2
@28133440 STACK = (#f 105 (105 108 100 32 99 ... . ()) #f)
call not
@28133441 STACK = (#f)
get 0
@28133442 STACK = (#f #f)
get false
@28133443 STACK = (#f #f #f)
jump eqv?
@28133444 STACK = (#t 105 (105 108 100 32 99 ... . ()) #f)
if
@28133445 STACK = (105 (105 108 100 32 99 ... . ()) #f)
get 0
@28133446 STACK = (105 105 (105 108 100 32 99 ... . ()) #f)
call putchar
i@28133447 STACK = (105 105 (105 108 100 32 99 ... . ()) #f)
call arg1
@28133448 STACK = (105 (105 108 100 32 99 ... . ()) #f)
get 1
@28133449 STACK = ((105 108 100 32 99 ... . ()) 105 (105 108 100 32 99 ... . ()) #f)
call cdr
@28133450 STACK = ((108 100 32 99 111 ... . ()) 105 (105 108 100 32 99 ... . ()) #f)
get 3
@28133451 STACK = (#f (108 100 32 99 111 ... . ()) 105 (105 108 100 32 99 ... . ()) #f)
jump write-chars
@28133452 STACK = ((108 100 32 99 111 ... . ()) #f)
get 0
@28133453 STACK = ((108 100 32 99 111 ... . ()) (108 100 32 99 111 ... . ()) #f)
call pair?
@28133454 STACK = ((108 100 32 99 111 ... . ()))
get 0
@28133455 STACK = ((108 100 32 99 111 ... . ()) (108 100 32 99 111 ... . ()))
call rib?
@28133456 STACK = (#t (108 100 32 99 111 ... . ()))
if
@28133457 STACK = ((108 100 32 99 111 ... . ()))
get 0
@28133458 STACK = ((108 100 32 99 111 ... . ()) (108 100 32 99 111 ... . ()))
call field2
@28133459 STACK = (0 (108 100 32 99 111 ... . ()))
get 4
@28133460 STACK = (0 0 (108 100 32 99 111 ... . ()))
jump eqv?
@28133461 STACK = (#t (108 100 32 99 111 ... . ()) #f)
if
@28133462 STACK = ((108 100 32 99 111 ... . ()) #f)
get 0
@28133463 STACK = ((108 100 32 99 111 ... . ()) (108 100 32 99 111 ... . ()) #f)
call car
@28133464 STACK = (108 (108 100 32 99 111 ... . ()) #f)
get 2
@28133465 STACK = (#f 108 (108 100 32 99 111 ... . ()) #f)
call not
@28133466 STACK = (#f)
get 0
@28133467 STACK = (#f #f)
get false
@28133468 STACK = (#f #f #f)
jump eqv?
@28133469 STACK = (#t 108 (108 100 32 99 111 ... . ()) #f)
if
@28133470 STACK = (108 (108 100 32 99 111 ... . ()) #f)
get 0
@28133471 STACK = (108 108 (108 100 32 99 111 ... . ()) #f)
call putchar
l@28133472 STACK = (108 108 (108 100 32 99 111 ... . ()) #f)
call arg1
@28133473 STACK = (108 (108 100 32 99 111 ... . ()) #f)
get 1
@28133474 STACK = ((108 100 32 99 111 ... . ()) 108 (108 100 32 99 111 ... . ()) #f)
call cdr
@28133475 STACK = ((100 32 99 111 110 ... . ()) 108 (108 100 32 99 111 ... . ()) #f)
get 3
@28133476 STACK = (#f (100 32 99 111 110 ... . ()) 108 (108 100 32 99 111 ... . ()) #f)
jump write-chars
@28133477 STACK = ((100 32 99 111 110 ... . ()) #f)
get 0
@28133478 STACK = ((100 32 99 111 110 ... . ()) (100 32 99 111 110 ... . ()) #f)
call pair?
@28133479 STACK = ((100 32 99 111 110 ... . ()))
get 0
@28133480 STACK = ((100 32 99 111 110 ... . ()) (100 32 99 111 110 ... . ()))
call rib?
@28133481 STACK = (#t (100 32 99 111 110 ... . ()))
if
@28133482 STACK = ((100 32 99 111 110 ... . ()))
get 0
@28133483 STACK = ((100 32 99 111 110 ... . ()) (100 32 99 111 110 ... . ()))
call field2
@28133484 STACK = (0 (100 32 99 111 110 ... . ()))
get 4
@28133485 STACK = (0 0 (100 32 99 111 110 ... . ()))
jump eqv?
@28133486 STACK = (#t (100 32 99 111 110 ... . ()) #f)
if
@28133487 STACK = ((100 32 99 111 110 ... . ()) #f)
get 0
@28133488 STACK = ((100 32 99 111 110 ... . ()) (100 32 99 111 110 ... . ()) #f)
call car
@28133489 STACK = (100 (100 32 99 111 110 ... . ()) #f)
get 2
@28133490 STACK = (#f 100 (100 32 99 111 110 ... . ()) #f)
call not
@28133491 STACK = (#f)
get 0
@28133492 STACK = (#f #f)
get false
@28133493 STACK = (#f #f #f)
jump eqv?
@28133494 STACK = (#t 100 (100 32 99 111 110 ... . ()) #f)
if
@28133495 STACK = (100 (100 32 99 111 110 ... . ()) #f)
get 0
@28133496 STACK = (100 100 (100 32 99 111 110 ... . ()) #f)
call putchar
d@28133497 STACK = (100 100 (100 32 99 111 110 ... . ()) #f)
call arg1
@28133498 STACK = (100 (100 32 99 111 110 ... . ()) #f)
get 1
@28133499 STACK = ((100 32 99 111 110 ... . ()) 100 (100 32 99 111 110 ... . ()) #f)
call cdr
@28133500 STACK = ((32 99 111 110 115 ... . ()) 100 (100 32 99 111 110 ... . ()) #f)
get 3
@28133501 STACK = (#f (32 99 111 110 115 ... . ()) 100 (100 32 99 111 110 ... . ()) #f)
jump write-chars
@28133502 STACK = ((32 99 111 110 115 ... . ()) #f)
get 0
@28133503 STACK = ((32 99 111 110 115 ... . ()) (32 99 111 110 115 ... . ()) #f)
call pair?
@28133504 STACK = ((32 99 111 110 115 ... . ()))
get 0
@28133505 STACK = ((32 99 111 110 115 ... . ()) (32 99 111 110 115 ... . ()))
call rib?
@28133506 STACK = (#t (32 99 111 110 115 ... . ()))
if
@28133507 STACK = ((32 99 111 110 115 ... . ()))
get 0
@28133508 STACK = ((32 99 111 110 115 ... . ()) (32 99 111 110 115 ... . ()))
call field2
@28133509 STACK = (0 (32 99 111 110 115 ... . ()))
get 4
@28133510 STACK = (0 0 (32 99 111 110 115 ... . ()))
jump eqv?
@28133511 STACK = (#t (32 99 111 110 115 ... . ()) #f)
if
@28133512 STACK = ((32 99 111 110 115 ... . ()) #f)
get 0
@28133513 STACK = ((32 99 111 110 115 ... . ()) (32 99 111 110 115 ... . ()) #f)
call car
@28133514 STACK = (32 (32 99 111 110 115 ... . ()) #f)
get 2
@28133515 STACK = (#f 32 (32 99 111 110 115 ... . ()) #f)
call not
@28133516 STACK = (#f)
get 0
@28133517 STACK = (#f #f)
get false
@28133518 STACK = (#f #f #f)
jump eqv?
@28133519 STACK = (#t 32 (32 99 111 110 115 ... . ()) #f)
if
@28133520 STACK = (32 (32 99 111 110 115 ... . ()) #f)
get 0
@28133521 STACK = (32 32 (32 99 111 110 115 ... . ()) #f)
call putchar
 @28133522 STACK = (32 32 (32 99 111 110 115 ... . ()) #f)
call arg1
@28133523 STACK = (32 (32 99 111 110 115 ... . ()) #f)
get 1
@28133524 STACK = ((32 99 111 110 115 ... . ()) 32 (32 99 111 110 115 ... . ()) #f)
call cdr
@28133525 STACK = ((99 111 110 115 116 ... . ()) 32 (32 99 111 110 115 ... . ()) #f)
get 3
@28133526 STACK = (#f (99 111 110 115 116 ... . ()) 32 (32 99 111 110 115 ... . ()) #f)
jump write-chars
@28133527 STACK = ((99 111 110 115 116 ... . ()) #f)
get 0
@28133528 STACK = ((99 111 110 115 116 ... . ()) (99 111 110 115 116 ... . ()) #f)
call pair?
@28133529 STACK = ((99 111 110 115 116 ... . ()))
get 0
@28133530 STACK = ((99 111 110 115 116 ... . ()) (99 111 110 115 116 ... . ()))
call rib?
@28133531 STACK = (#t (99 111 110 115 116 ... . ()))
if
@28133532 STACK = ((99 111 110 115 116 ... . ()))
get 0
@28133533 STACK = ((99 111 110 115 116 ... . ()) (99 111 110 115 116 ... . ()))
call field2
@28133534 STACK = (0 (99 111 110 115 116 ... . ()))
get 4
@28133535 STACK = (0 0 (99 111 110 115 116 ... . ()))
jump eqv?
@28133536 STACK = (#t (99 111 110 115 116 ... . ()) #f)
if
@28133537 STACK = ((99 111 110 115 116 ... . ()) #f)
get 0
@28133538 STACK = ((99 111 110 115 116 ... . ()) (99 111 110 115 116 ... . ()) #f)
call car
@28133539 STACK = (99 (99 111 110 115 116 ... . ()) #f)
get 2
@28133540 STACK = (#f 99 (99 111 110 115 116 ... . ()) #f)
call not
@28133541 STACK = (#f)
get 0
@28133542 STACK = (#f #f)
get false
@28133543 STACK = (#f #f #f)
jump eqv?
@28133544 STACK = (#t 99 (99 111 110 115 116 ... . ()) #f)
if
@28133545 STACK = (99 (99 111 110 115 116 ... . ()) #f)
get 0
@28133546 STACK = (99 99 (99 111 110 115 116 ... . ()) #f)
call putchar
c@28133547 STACK = (99 99 (99 111 110 115 116 ... . ()) #f)
call arg1
@28133548 STACK = (99 (99 111 110 115 116 ... . ()) #f)
get 1
@28133549 STACK = ((99 111 110 115 116 ... . ()) 99 (99 111 110 115 116 ... . ()) #f)
call cdr
@28133550 STACK = ((111 110 115 116 97 ... . ()) 99 (99 111 110 115 116 ... . ()) #f)
get 3
@28133551 STACK = (#f (111 110 115 116 97 ... . ()) 99 (99 111 110 115 116 ... . ()) #f)
jump write-chars
@28133552 STACK = ((111 110 115 116 97 ... . ()) #f)
get 0
@28133553 STACK = ((111 110 115 116 97 ... . ()) (111 110 115 116 97 ... . ()) #f)
call pair?
@28133554 STACK = ((111 110 115 116 97 ... . ()))
get 0
@28133555 STACK = ((111 110 115 116 97 ... . ()) (111 110 115 116 97 ... . ()))
call rib?
@28133556 STACK = (#t (111 110 115 116 97 ... . ()))
if
@28133557 STACK = ((111 110 115 116 97 ... . ()))
get 0
@28133558 STACK = ((111 110 115 116 97 ... . ()) (111 110 115 116 97 ... . ()))
call field2
@28133559 STACK = (0 (111 110 115 116 97 ... . ()))
get 4
@28133560 STACK = (0 0 (111 110 115 116 97 ... . ()))
jump eqv?
@28133561 STACK = (#t (111 110 115 116 97 ... . ()) #f)
if
@28133562 STACK = ((111 110 115 116 97 ... . ()) #f)
get 0
@28133563 STACK = ((111 110 115 116 97 ... . ()) (111 110 115 116 97 ... . ()) #f)
call car
@28133564 STACK = (111 (111 110 115 116 97 ... . ()) #f)
get 2
@28133565 STACK = (#f 111 (111 110 115 116 97 ... . ()) #f)
call not
@28133566 STACK = (#f)
get 0
@28133567 STACK = (#f #f)
get false
@28133568 STACK = (#f #f #f)
jump eqv?
@28133569 STACK = (#t 111 (111 110 115 116 97 ... . ()) #f)
if
@28133570 STACK = (111 (111 110 115 116 97 ... . ()) #f)
get 0
@28133571 STACK = (111 111 (111 110 115 116 97 ... . ()) #f)
call putchar
o@28133572 STACK = (111 111 (111 110 115 116 97 ... . ()) #f)
call arg1
@28133573 STACK = (111 (111 110 115 116 97 ... . ()) #f)
get 1
@28133574 STACK = ((111 110 115 116 97 ... . ()) 111 (111 110 115 116 97 ... . ()) #f)
call cdr
@28133575 STACK = ((110 115 116 97 110 ... . ()) 111 (111 110 115 116 97 ... . ()) #f)
get 3
@28133576 STACK = (#f (110 115 116 97 110 ... . ()) 111 (111 110 115 116 97 ... . ()) #f)
jump write-chars
@28133577 STACK = ((110 115 116 97 110 ... . ()) #f)
get 0
@28133578 STACK = ((110 115 116 97 110 ... . ()) (110 115 116 97 110 ... . ()) #f)
call pair?
@28133579 STACK = ((110 115 116 97 110 ... . ()))
get 0
@28133580 STACK = ((110 115 116 97 110 ... . ()) (110 115 116 97 110 ... . ()))
call rib?
@28133581 STACK = (#t (110 115 116 97 110 ... . ()))
if
@28133582 STACK = ((110 115 116 97 110 ... . ()))
get 0
@28133583 STACK = ((110 115 116 97 110 ... . ()) (110 115 116 97 110 ... . ()))
call field2
@28133584 STACK = (0 (110 115 116 97 110 ... . ()))
get 4
@28133585 STACK = (0 0 (110 115 116 97 110 ... . ()))
jump eqv?
@28133586 STACK = (#t (110 115 116 97 110 ... . ()) #f)
if
@28133587 STACK = ((110 115 116 97 110 ... . ()) #f)
get 0
@28133588 STACK = ((110 115 116 97 110 ... . ()) (110 115 116 97 110 ... . ()) #f)
call car
@28133589 STACK = (110 (110 115 116 97 110 ... . ()) #f)
get 2
@28133590 STACK = (#f 110 (110 115 116 97 110 ... . ()) #f)
call not
@28133591 STACK = (#f)
get 0
@28133592 STACK = (#f #f)
get false
@28133593 STACK = (#f #f #f)
jump eqv?
@28133594 STACK = (#t 110 (110 115 116 97 110 ... . ()) #f)
if
@28133595 STACK = (110 (110 115 116 97 110 ... . ()) #f)
get 0
@28133596 STACK = (110 110 (110 115 116 97 110 ... . ()) #f)
call putchar
n@28133597 STACK = (110 110 (110 115 116 97 110 ... . ()) #f)
call arg1
@28133598 STACK = (110 (110 115 116 97 110 ... . ()) #f)
get 1
@28133599 STACK = ((110 115 116 97 110 ... . ()) 110 (110 115 116 97 110 ... . ()) #f)
call cdr
@28133600 STACK = ((115 116 97 110 116 . ()) 110 (110 115 116 97 110 ... . ()) #f)
get 3
@28133601 STACK = (#f (115 116 97 110 116 . ()) 110 (110 115 116 97 110 ... . ()) #f)
jump write-chars
@28133602 STACK = ((115 116 97 110 116 . ()) #f)
get 0
@28133603 STACK = ((115 116 97 110 116 . ()) (115 116 97 110 116 . ()) #f)
call pair?
@28133604 STACK = ((115 116 97 110 116 . ()))
get 0
@28133605 STACK = ((115 116 97 110 116 . ()) (115 116 97 110 116 . ()))
call rib?
@28133606 STACK = (#t (115 116 97 110 116 . ()))
if
@28133607 STACK = ((115 116 97 110 116 . ()))
get 0
@28133608 STACK = ((115 116 97 110 116 . ()) (115 116 97 110 116 . ()))
call field2
@28133609 STACK = (0 (115 116 97 110 116 . ()))
get 4
@28133610 STACK = (0 0 (115 116 97 110 116 . ()))
jump eqv?
@28133611 STACK = (#t (115 116 97 110 116 . ()) #f)
if
@28133612 STACK = ((115 116 97 110 116 . ()) #f)
get 0
@28133613 STACK = ((115 116 97 110 116 . ()) (115 116 97 110 116 . ()) #f)
call car
@28133614 STACK = (115 (115 116 97 110 116 . ()) #f)
get 2
@28133615 STACK = (#f 115 (115 116 97 110 116 . ()) #f)
call not
@28133616 STACK = (#f)
get 0
@28133617 STACK = (#f #f)
get false
@28133618 STACK = (#f #f #f)
jump eqv?
@28133619 STACK = (#t 115 (115 116 97 110 116 . ()) #f)
if
@28133620 STACK = (115 (115 116 97 110 116 . ()) #f)
get 0
@28133621 STACK = (115 115 (115 116 97 110 116 . ()) #f)
call putchar
s@28133622 STACK = (115 115 (115 116 97 110 116 . ()) #f)
call arg1
@28133623 STACK = (115 (115 116 97 110 116 . ()) #f)
get 1
@28133624 STACK = ((115 116 97 110 116 . ()) 115 (115 116 97 110 116 . ()) #f)
call cdr
@28133625 STACK = ((116 97 110 116 . ()) 115 (115 116 97 110 116 . ()) #f)
get 3
@28133626 STACK = (#f (116 97 110 116 . ()) 115 (115 116 97 110 116 . ()) #f)
jump write-chars
@28133627 STACK = ((116 97 110 116 . ()) #f)
get 0
@28133628 STACK = ((116 97 110 116 . ()) (116 97 110 116 . ()) #f)
call pair?
@28133629 STACK = ((116 97 110 116 . ()))
get 0
@28133630 STACK = ((116 97 110 116 . ()) (116 97 110 116 . ()))
call rib?
@28133631 STACK = (#t (116 97 110 116 . ()))
if
@28133632 STACK = ((116 97 110 116 . ()))
get 0
@28133633 STACK = ((116 97 110 116 . ()) (116 97 110 116 . ()))
call field2
@28133634 STACK = (0 (116 97 110 116 . ()))
get 4
@28133635 STACK = (0 0 (116 97 110 116 . ()))
jump eqv?
@28133636 STACK = (#t (116 97 110 116 . ()) #f)
if
@28133637 STACK = ((116 97 110 116 . ()) #f)
get 0
@28133638 STACK = ((116 97 110 116 . ()) (116 97 110 116 . ()) #f)
call car
@28133639 STACK = (116 (116 97 110 116 . ()) #f)
get 2
@28133640 STACK = (#f 116 (116 97 110 116 . ()) #f)
call not
@28133641 STACK = (#f)
get 0
@28133642 STACK = (#f #f)
get false
@28133643 STACK = (#f #f #f)
jump eqv?
@28133644 STACK = (#t 116 (116 97 110 116 . ()) #f)
if
@28133645 STACK = (116 (116 97 110 116 . ()) #f)
get 0
@28133646 STACK = (116 116 (116 97 110 116 . ()) #f)
call putchar
t@28133647 STACK = (116 116 (116 97 110 116 . ()) #f)
call arg1
@28133648 STACK = (116 (116 97 110 116 . ()) #f)
get 1
@28133649 STACK = ((116 97 110 116 . ()) 116 (116 97 110 116 . ()) #f)
call cdr
@28133650 STACK = ((97 110 116 . ()) 116 (116 97 110 116 . ()) #f)
get 3
@28133651 STACK = (#f (97 110 116 . ()) 116 (116 97 110 116 . ()) #f)
jump write-chars
@28133652 STACK = ((97 110 116 . ()) #f)
get 0
@28133653 STACK = ((97 110 116 . ()) (97 110 116 . ()) #f)
call pair?
@28133654 STACK = ((97 110 116 . ()))
get 0
@28133655 STACK = ((97 110 116 . ()) (97 110 116 . ()))
call rib?
@28133656 STACK = (#t (97 110 116 . ()))
if
@28133657 STACK = ((97 110 116 . ()))
get 0
@28133658 STACK = ((97 110 116 . ()) (97 110 116 . ()))
call field2
@28133659 STACK = (0 (97 110 116 . ()))
get 4
@28133660 STACK = (0 0 (97 110 116 . ()))
jump eqv?
@28133661 STACK = (#t (97 110 116 . ()) #f)
if
@28133662 STACK = ((97 110 116 . ()) #f)
get 0
@28133663 STACK = ((97 110 116 . ()) (97 110 116 . ()) #f)
call car
@28133664 STACK = (97 (97 110 116 . ()) #f)
get 2
@28133665 STACK = (#f 97 (97 110 116 . ()) #f)
call not
@28133666 STACK = (#f)
get 0
@28133667 STACK = (#f #f)
get false
@28133668 STACK = (#f #f #f)
jump eqv?
@28133669 STACK = (#t 97 (97 110 116 . ()) #f)
if
@28133670 STACK = (97 (97 110 116 . ()) #f)
get 0
@28133671 STACK = (97 97 (97 110 116 . ()) #f)
call putchar
a@28133672 STACK = (97 97 (97 110 116 . ()) #f)
call arg1
@28133673 STACK = (97 (97 110 116 . ()) #f)
get 1
@28133674 STACK = ((97 110 116 . ()) 97 (97 110 116 . ()) #f)
call cdr
@28133675 STACK = ((110 116 . ()) 97 (97 110 116 . ()) #f)
get 3
@28133676 STACK = (#f (110 116 . ()) 97 (97 110 116 . ()) #f)
jump write-chars
@28133677 STACK = ((110 116 . ()) #f)
get 0
@28133678 STACK = ((110 116 . ()) (110 116 . ()) #f)
call pair?
@28133679 STACK = ((110 116 . ()))
get 0
@28133680 STACK = ((110 116 . ()) (110 116 . ()))
call rib?
@28133681 STACK = (#t (110 116 . ()))
if
@28133682 STACK = ((110 116 . ()))
get 0
@28133683 STACK = ((110 116 . ()) (110 116 . ()))
call field2
@28133684 STACK = (0 (110 116 . ()))
get 4
@28133685 STACK = (0 0 (110 116 . ()))
jump eqv?
@28133686 STACK = (#t (110 116 . ()) #f)
if
@28133687 STACK = ((110 116 . ()) #f)
get 0
@28133688 STACK = ((110 116 . ()) (110 116 . ()) #f)
call car
@28133689 STACK = (110 (110 116 . ()) #f)
get 2
@28133690 STACK = (#f 110 (110 116 . ()) #f)
call not
@28133691 STACK = (#f)
get 0
@28133692 STACK = (#f #f)
get false
@28133693 STACK = (#f #f #f)
jump eqv?
@28133694 STACK = (#t 110 (110 116 . ()) #f)
if
@28133695 STACK = (110 (110 116 . ()) #f)
get 0
@28133696 STACK = (110 110 (110 116 . ()) #f)
call putchar
n@28133697 STACK = (110 110 (110 116 . ()) #f)
call arg1
@28133698 STACK = (110 (110 116 . ()) #f)
get 1
@28133699 STACK = ((110 116 . ()) 110 (110 116 . ()) #f)
call cdr
@28133700 STACK = ((116 . ()) 110 (110 116 . ()) #f)
get 3
@28133701 STACK = (#f (116 . ()) 110 (110 116 . ()) #f)
jump write-chars
@28133702 STACK = ((116 . ()) #f)
get 0
@28133703 STACK = ((116 . ()) (116 . ()) #f)
call pair?
@28133704 STACK = ((116 . ()))
get 0
@28133705 STACK = ((116 . ()) (116 . ()))
call rib?
@28133706 STACK = (#t (116 . ()))
if
@28133707 STACK = ((116 . ()))
get 0
@28133708 STACK = ((116 . ()) (116 . ()))
call field2
@28133709 STACK = (0 (116 . ()))
get 4
@28133710 STACK = (0 0 (116 . ()))
jump eqv?
@28133711 STACK = (#t (116 . ()) #f)
if
@28133712 STACK = ((116 . ()) #f)
get 0
@28133713 STACK = ((116 . ()) (116 . ()) #f)
call car
@28133714 STACK = (116 (116 . ()) #f)
get 2
@28133715 STACK = (#f 116 (116 . ()) #f)
call not
@28133716 STACK = (#f)
get 0
@28133717 STACK = (#f #f)
get false
@28133718 STACK = (#f #f #f)
jump eqv?
@28133719 STACK = (#t 116 (116 . ()) #f)
if
@28133720 STACK = (116 (116 . ()) #f)
get 0
@28133721 STACK = (116 116 (116 . ()) #f)
call putchar
t@28133722 STACK = (116 116 (116 . ()) #f)
call arg1
@28133723 STACK = (116 (116 . ()) #f)
get 1
@28133724 STACK = ((116 . ()) 116 (116 . ()) #f)
call cdr
@28133725 STACK = (() 116 (116 . ()) #f)
get 3
@28133726 STACK = (#f () 116 (116 . ()) #f)
jump write-chars
@28133727 STACK = (() #f)
get 0
@28133728 STACK = (() () #f)
call pair?
@28133729 STACK = (())
get 0
@28133730 STACK = (() ())
call rib?
@28133731 STACK = (#t ())
if
@28133732 STACK = (())
get 0
@28133733 STACK = (() ())
call field2
@28133734 STACK = (5 ())
get 4
@28133735 STACK = (0 5 ())
jump eqv?
@28133736 STACK = (#f () #f)
if
@28133737 STACK = (() #f)
get false
@28133738 STACK = (#f () #f)
jump id
@28133739 STACK = (#f "can't build constant" [0,0,5])
call arg1
@28133740 STACK = ("can't build constant" [0,0,5])
get #<symbol "">
@28133741 STACK = (" " "can't build constant" [0,0,5])
call display
@28133742 STACK = (" ")
get 0
@28133743 STACK = (" " " ")
call not
@28133744 STACK = (" ")
get 0
@28133745 STACK = (" " " ")
get false
@28133746 STACK = (#f " " " ")
jump eqv?
@28133747 STACK = (#f " ")
if
@28133748 STACK = (" ")
get 0
@28133749 STACK = (" " " ")
get true
@28133750 STACK = (#t " " " ")
call eqv?
@28133751 STACK = (#f " ")
if
@28133752 STACK = (" ")
get 0
@28133753 STACK = (" " " ")
call null?
@28133754 STACK = (" ")
get 0
@28133755 STACK = (" " " ")
get nil
@28133756 STACK = (() " " " ")
jump eqv?
@28133757 STACK = (#f " ")
if
@28133758 STACK = (" ")
get 0
@28133759 STACK = (" " " ")
call pair?
@28133760 STACK = (" ")
get 0
@28133761 STACK = (" " " ")
call rib?
@28133762 STACK = (#t " ")
if
@28133763 STACK = (" ")
get 0
@28133764 STACK = (" " " ")
call field2
@28133765 STACK = (3 " ")
get 4
@28133766 STACK = (0 3 " ")
jump eqv?
@28133767 STACK = (#f " ")
if
@28133768 STACK = (" ")
get 0
@28133769 STACK = (" " " ")
call symbol?
@28133770 STACK = (" ")
get 0
@28133771 STACK = (" " " ")
call rib?
@28133772 STACK = (#t " ")
if
@28133773 STACK = (" ")
get 0
@28133774 STACK = (" " " ")
call field2
@28133775 STACK = (3 " ")
get 4
@28133776 STACK = (2 3 " ")
jump eqv?
@28133777 STACK = (#f " ")
if
@28133778 STACK = (" ")
get 0
@28133779 STACK = (" " " ")
call string?
@28133780 STACK = (" ")
get 0
@28133781 STACK = (" " " ")
call rib?
@28133782 STACK = (#t " ")
if
@28133783 STACK = (" ")
get 0
@28133784 STACK = (" " " ")
call field2
@28133785 STACK = (3 " ")
get 4
@28133786 STACK = (3 3 " ")
jump eqv?
@28133787 STACK = (#t " ")
if
@28133788 STACK = (" ")
get 0
@28133789 STACK = (" " " ")
call string->list
@28133790 STACK = ((32 . ()) " ")
get false
@28133791 STACK = (#f (32 . ()) " ")
jump write-chars
@28133792 STACK = ((32 . ()) #f)
get 0
@28133793 STACK = ((32 . ()) (32 . ()) #f)
call pair?
@28133794 STACK = ((32 . ()))
get 0
@28133795 STACK = ((32 . ()) (32 . ()))
call rib?
@28133796 STACK = (#t (32 . ()))
if
@28133797 STACK = ((32 . ()))
get 0
@28133798 STACK = ((32 . ()) (32 . ()))
call field2
@28133799 STACK = (0 (32 . ()))
get 4
@28133800 STACK = (0 0 (32 . ()))
jump eqv?
@28133801 STACK = (#t (32 . ()) #f)
if
@28133802 STACK = ((32 . ()) #f)
get 0
@28133803 STACK = ((32 . ()) (32 . ()) #f)
call car
@28133804 STACK = (32 (32 . ()) #f)
get 2
@28133805 STACK = (#f 32 (32 . ()) #f)
call not
@28133806 STACK = (#f)
get 0
@28133807 STACK = (#f #f)
get false
@28133808 STACK = (#f #f #f)
jump eqv?
@28133809 STACK = (#t 32 (32 . ()) #f)
if
@28133810 STACK = (32 (32 . ()) #f)
get 0
@28133811 STACK = (32 32 (32 . ()) #f)
call putchar
 @28133812 STACK = (32 32 (32 . ()) #f)
call arg1
@28133813 STACK = (32 (32 . ()) #f)
get 1
@28133814 STACK = ((32 . ()) 32 (32 . ()) #f)
call cdr
@28133815 STACK = (() 32 (32 . ()) #f)
get 3
@28133816 STACK = (#f () 32 (32 . ()) #f)
jump write-chars
@28133817 STACK = (() #f)
get 0
@28133818 STACK = (() () #f)
call pair?
@28133819 STACK = (())
get 0
@28133820 STACK = (() ())
call rib?
@28133821 STACK = (#t ())
if
@28133822 STACK = (())
get 0
@28133823 STACK = (() ())
call field2
@28133824 STACK = (5 ())
get 4
@28133825 STACK = (0 5 ())
jump eqv?
@28133826 STACK = (#f () #f)
if
@28133827 STACK = (() #f)
get false
@28133828 STACK = (#f () #f)
jump id
@28133829 STACK = (#f "can't build constant" [0,0,5])
call arg1
@28133830 STACK = ("can't build constant" [0,0,5])
get 1
@28133831 STACK = ([0,0,5] "can't build constant" [0,0,5])
call write
@28133832 STACK = ([0,0,5])
get 0
@28133833 STACK = ([0,0,5] [0,0,5])
call string?
@28133834 STACK = ([0,0,5])
get 0
@28133835 STACK = ([0,0,5] [0,0,5])
call rib?
@28133836 STACK = (#t [0,0,5])
if
@28133837 STACK = ([0,0,5])
get 0
@28133838 STACK = ([0,0,5] [0,0,5])
call field2
@28133839 STACK = (5 [0,0,5])
get 4
@28133840 STACK = (3 5 [0,0,5])
jump eqv?
@28133841 STACK = (#f [0,0,5])
if
@28133842 STACK = ([0,0,5])
get 0
@28133843 STACK = ([0,0,5] [0,0,5])
jump display
@28133844 STACK = ([0,0,5])
get 0
@28133845 STACK = ([0,0,5] [0,0,5])
call not
@28133846 STACK = ([0,0,5])
get 0
@28133847 STACK = ([0,0,5] [0,0,5])
get false
@28133848 STACK = (#f [0,0,5] [0,0,5])
jump eqv?
@28133849 STACK = (#f [0,0,5])
if
@28133850 STACK = ([0,0,5])
get 0
@28133851 STACK = ([0,0,5] [0,0,5])
get true
@28133852 STACK = (#t [0,0,5] [0,0,5])
call eqv?
@28133853 STACK = (#f [0,0,5])
if
@28133854 STACK = ([0,0,5])
get 0
@28133855 STACK = ([0,0,5] [0,0,5])
call null?
@28133856 STACK = ([0,0,5])
get 0
@28133857 STACK = ([0,0,5] [0,0,5])
get nil
@28133858 STACK = (() [0,0,5] [0,0,5])
jump eqv?
@28133859 STACK = (#f [0,0,5])
if
@28133860 STACK = ([0,0,5])
get 0
@28133861 STACK = ([0,0,5] [0,0,5])
call pair?
@28133862 STACK = ([0,0,5])
get 0
@28133863 STACK = ([0,0,5] [0,0,5])
call rib?
@28133864 STACK = (#t [0,0,5])
if
@28133865 STACK = ([0,0,5])
get 0
@28133866 STACK = ([0,0,5] [0,0,5])
call field2
@28133867 STACK = (5 [0,0,5])
get 4
@28133868 STACK = (0 5 [0,0,5])
jump eqv?
@28133869 STACK = (#f [0,0,5])
if
@28133870 STACK = ([0,0,5])
get 0
@28133871 STACK = ([0,0,5] [0,0,5])
call symbol?
@28133872 STACK = ([0,0,5])
get 0
@28133873 STACK = ([0,0,5] [0,0,5])
call rib?
@28133874 STACK = (#t [0,0,5])
if
@28133875 STACK = ([0,0,5])
get 0
@28133876 STACK = ([0,0,5] [0,0,5])
call field2
@28133877 STACK = (5 [0,0,5])
get 4
@28133878 STACK = (2 5 [0,0,5])
jump eqv?
@28133879 STACK = (#f [0,0,5])
if
@28133880 STACK = ([0,0,5])
get 0
@28133881 STACK = ([0,0,5] [0,0,5])
call string?
@28133882 STACK = ([0,0,5])
get 0
@28133883 STACK = ([0,0,5] [0,0,5])
call rib?
@28133884 STACK = (#t [0,0,5])
if
@28133885 STACK = ([0,0,5])
get 0
@28133886 STACK = ([0,0,5] [0,0,5])
call field2
@28133887 STACK = (5 [0,0,5])
get 4
@28133888 STACK = (3 5 [0,0,5])
jump eqv?
@28133889 STACK = (#f [0,0,5])
if
@28133890 STACK = ([0,0,5])
get 0
@28133891 STACK = ([0,0,5] [0,0,5])
call vector?
@28133892 STACK = ([0,0,5])
get 0
@28133893 STACK = ([0,0,5] [0,0,5])
call rib?
@28133894 STACK = (#t [0,0,5])
if
@28133895 STACK = ([0,0,5])
get 0
@28133896 STACK = ([0,0,5] [0,0,5])
call field2
@28133897 STACK = (5 [0,0,5])
get 4
@28133898 STACK = (4 5 [0,0,5])
jump eqv?
@28133899 STACK = (#f [0,0,5])
if
@28133900 STACK = ([0,0,5])
get 0
@28133901 STACK = ([0,0,5] [0,0,5])
call procedure?
@28133902 STACK = ([0,0,5])
get 0
@28133903 STACK = ([0,0,5] [0,0,5])
call rib?
@28133904 STACK = (#t [0,0,5])
if
@28133905 STACK = ([0,0,5])
get 0
@28133906 STACK = ([0,0,5] [0,0,5])
call field2
@28133907 STACK = (5 [0,0,5])
get 4
@28133908 STACK = (1 5 [0,0,5])
jump eqv?
@28133909 STACK = (#f [0,0,5])
if
@28133910 STACK = ([0,0,5])
get 0
@28133911 STACK = ([0,0,5] [0,0,5])
call number->string
@28133912 STACK = ([0,0,5])
get 0
@28133913 STACK = ([0,0,5] [0,0,5])
const 0
@28133914 STACK = (0 [0,0,5] [0,0,5])
call <
